matias:~/Documents/DB-practice/ (main)$ python3 -m venv ven

matias:~/Documents/DB-practice/ (main)$ source venv/bin/activate

(venv) matias:~/Documents/DB-practice/ (main)$ cd database

(venv) matias:~/Documents/DB-practice/database (main)$ docker pull postgres
Using default tag: latest
latest: Pulling from library/postgres
Digest: sha256:c62fdb7fd6f519ef425c54760894c74e8d0cb04fbf4f7d3d79aafd86bae24edd
Status: Image is up to date for postgres:latest
docker.io/library/postgres:latest

(venv) matias:~/Documents/DB-practice/database (main)$ docker run --name supply-chain -e POSTGRES_USER=development_user -e POSTGRES_PASSWORD=development_password -e POSTGRES_DB=supplychain_development -p 5432:5432 -d postgres
dbf093bf0c5eeb7cec506be09e82fb481101b4a464b2e0401eb1cfb923272944

(venv) matias:~/Documents/DB-practice/database (main)$ docker ps -a
CONTAINER ID   IMAGE      COMMAND                  CREATED          STATUS          PORTS                                       NAMES
dbf093bf0c5e   postgres   "docker-entrypoint.sâ€¦"   16 minutes ago   Up 16 minutes   0.0.0.0:5432->5432/tcp, :::5432->5432/tcp   supply-chain

(venv) matias:~/Documents/DB-practice/database (main)$ docker exec -it supply-chain psql -U development_user -d postgres
psql (16.4 (Debian 16.4-1.pgdg120+1))
Type "help" for help.

postgres=# \l
                                                          List of databases
          Name           |      Owner       | Encoding | Locale Provider |  Collate   |   Ctype    | ICU Locale | ICU Rules | Access privileges 
-------------------------+------------------+----------+-----------------+------------+------------+------------+-----------+-------------------
 postgres                | development_user | UTF8     | libc            | en_US.utf8 | en_US.utf8 |            |           | 
 supplychain_development | development_user | UTF8     | libc            | en_US.utf8 | en_US.utf8 |            |           | 
 template0               | development_user | UTF8     | libc            | en_US.utf8 | en_US.utf8 |            |           | =c/development_user        +
                         |        |          |                 |            |            |            |           | development_user=CTc/development_user
 template1               | development_user | UTF8     | libc            | en_US.utf8 | en_US.utf8 |            |           | =c/development_user        +
                         |        |          |                 |            |            |            |           | development_user=CTc/development_user
(4 rows)

postgres=# CREATE USER production_user WITH PASSWORD 'production_password';
CREATE ROLE

postgres=# CREATE DATABASE supplychain_production OWNER production_user;
CREATE DATABASE

postgres=# CREATE USER backup_user WITH PASSWORD 'backup_password';
CREATE ROLE

postgres=# CREATE DATABASE supplychain_backup OWNER backup_user;
CREATE DATABASE

postgres=# \l
                                                            List of databases
          Name           |        Owner         | Encoding | Locale Provider |  Collate   |   Ctype    | ICU Locale | ICU Rules | Access privileges 
-------------------------+----------------------+----------+-----------------+------------+------------+------------+-----------+-------------------
 postgres                | development_user     | UTF8     | libc            | en_US.utf8 | en_US.utf8 |            |           | 
 supplychain_backup      | backup_user          | UTF8     | libc            | en_US.utf8 | en_US.utf8 |            |           | 
 supplychain_development | development_user     | UTF8     | libc            | en_US.utf8 | en_US.utf8 |            |           | 
 supplychain_production  | production_user      | UTF8     | libc            | en_US.utf8 | en_US.utf8 |            |           | 
 template0               | development_user     | UTF8     | libc            | en_US.utf8 | en_US.utf8 |            |           | =c/development_user        +
                         |            |          |                 |            |            |            |           | development_user=CTc/development_user
 template1               | development_user     | UTF8     | libc            | en_US.utf8 | en_US.utf8 |            |           | =c/development_user        +
                         |            |          |                 |            |            |            |           | development_user=CTc/development_user
(6 rows)

postgres=# \c supplychain_development
You are now connected to database "supplychain_development" as user "development_user".

supplychain_development=# \dt
Did not find any relations.

supplychain_development=# \q

(venv) matias:~/Documents/DB-practice/database (main)$ python3 db_setup.py supplychain_development
Tables created successfully

(venv) matias:~/Documents/DB-practice/database (main)$ python3 db_setup.py supplychain_production
Tables created successfully

(venv) matias:~/Documents/DB-practice/database (main)$ python3 db_setup.py supplychain_backup
Tables created successfully

(venv) matias:~/Documents/DB-practice/database (main)$ docker exec -it supply-chain psql -U development_user -d postgres
psql (16.4 (Debian 16.4-1.pgdg120+1))
Type "help" for help.

postgres=# \c supplychain_development
You are now connected to database "supplychain_development" as user "development_user".

supplychain_development=# \dt
            List of relations
 Schema |     Name      | Type  |      Owner      
--------+---------------+-------+-----------------
 public | categories    | table | development_user
 public | customers     | table | development_user
 public | employees     | table | development_user
 public | logs          | table | development_user
 public | order_details | table | development_user
 public | orders        | table | development_user
 public | products      | table | development_user
 public | shippers      | table | development_user
 public | suppliers     | table | development_user
 public | users         | table | development_user
(10 rows)

supplychain_development=# \d orders
                                            Table "public.orders"
   Column    |            Type             | Collation | Nullable |                 Default                  
-------------+-----------------------------+-----------+----------+------------------------------------------
 order_id    | integer                     |           | not null | nextval('orders_order_id_seq'::regclass)
 customer_id | integer                     |           | not null | 
 shipper_id  | integer                     |           | not null | 
 employee_id | integer                     |           | not null | 
 order_date  | timestamp without time zone |           |          | 
Indexes:
    "orders_pkey" PRIMARY KEY, btree (order_id)
Foreign-key constraints:
    "orders_customer_id_fkey" FOREIGN KEY (customer_id) REFERENCES customers(customer_id)
    "orders_employee_id_fkey" FOREIGN KEY (employee_id) REFERENCES employees(employee_id)
    "orders_shipper_id_fkey" FOREIGN KEY (shipper_id) REFERENCES shippers(shipper_id)
Referenced by:
    TABLE "order_details" CONSTRAINT "order_details_order_id_fkey" FOREIGN KEY (order_id) REFERENCES orders(order_id)

supplychain_development=# \c postgres
You are now connected to database "postgres" as user "development_user".

postgres=# \c supplychain_production
You are now connected to database "supplychain_production" as user "development_user".

supplychain_production=# \dt
              List of relations
 Schema |     Name      | Type  |   Owner    
--------+---------------+-------+------------
 public | categories    | table | production_user
 public | customers     | table | production_user
 public | employees     | table | production_user
 public | logs          | table | production_user
 public | order_details | table | production_user
 public | orders        | table | production_user
 public | products      | table | production_user
 public | shippers      | table | production_user
 public | suppliers     | table | production_user
 public | users         | table | production_user
(10 rows)

supplychain_production=# \d orders
                                            Table "public.orders"
   Column    |            Type             | Collation | Nullable |                 Default                  
-------------+-----------------------------+-----------+----------+------------------------------------------
 order_id    | integer                     |           | not null | nextval('orders_order_id_seq'::regclass)
 customer_id | integer                     |           | not null | 
 shipper_id  | integer                     |           | not null | 
 employee_id | integer                     |           | not null | 
 order_date  | timestamp without time zone |           |          | 
Indexes:
    "orders_pkey" PRIMARY KEY, btree (order_id)
Foreign-key constraints:
    "orders_customer_id_fkey" FOREIGN KEY (customer_id) REFERENCES customers(customer_id)
    "orders_employee_id_fkey" FOREIGN KEY (employee_id) REFERENCES employees(employee_id)
    "orders_shipper_id_fkey" FOREIGN KEY (shipper_id) REFERENCES shippers(shipper_id)
Referenced by:
    TABLE "order_details" CONSTRAINT "order_details_order_id_fkey" FOREIGN KEY (order_id) REFERENCES orders(order_id)

supplychain_production=# \c postgres
You are now connected to database "postgres" as user "development_user".

postgres=# \c supplychain_backup
You are now connected to database "supplychain_backup" as user "development_user".

supplychain_backup=# \dt
            List of relations
 Schema |     Name      | Type  | Owner  
--------+---------------+-------+--------
 public | categories    | table | backup_user
 public | customers     | table | backup_user
 public | employees     | table | backup_user
 public | logs          | table | backup_user
 public | order_details | table | backup_user
 public | orders        | table | backup_user
 public | products      | table | backup_user
 public | shippers      | table | backup_user
 public | suppliers     | table | backup_user
 public | users         | table | backup_user
(10 rows)

supplychain_backup=# \d orders
                                            Table "public.orders"
   Column    |            Type             | Collation | Nullable |                 Default                  
-------------+-----------------------------+-----------+----------+------------------------------------------
 order_id    | integer                     |           | not null | nextval('orders_order_id_seq'::regclass)
 customer_id | integer                     |           | not null | 
 shipper_id  | integer                     |           | not null | 
 employee_id | integer                     |           | not null | 
 order_date  | timestamp without time zone |           |          | 
Indexes:
    "orders_pkey" PRIMARY KEY, btree (order_id)
Foreign-key constraints:
    "orders_customer_id_fkey" FOREIGN KEY (customer_id) REFERENCES customers(customer_id)
    "orders_employee_id_fkey" FOREIGN KEY (employee_id) REFERENCES employees(employee_id)
    "orders_shipper_id_fkey" FOREIGN KEY (shipper_id) REFERENCES shippers(shipper_id)
Referenced by:
    TABLE "order_details" CONSTRAINT "order_details_order_id_fkey" FOREIGN KEY (order_id) REFERENCES orders(order_id)

supplychain_backup=# \c postgres
You are now connected to database "postgres" as user "development_user".

postgres=# \q
(venv) matias:~/Documents/DB-practice/database (main)$ 

